@model GoogleCalenderDemo.Dtos.AvailabilityEvent


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.success != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewBag.success
        </div>
    }
    if (ViewBag.error != null)
    {
        <div class="alert alert-success" role="alert">
            @ViewBag.error
        </div>
    }
    <div class="form-horizontal">
        <h4>Create event</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.GuestEmailId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.GuestEmailId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.GuestEmailId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Location, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control", type = "date"}})
                @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hour, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hour, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Hour, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Check" class="btn btn-default"/>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}